AC_INIT
AC_PREREQ(2.2)
dnl AC_CONFIG_AUX_DIR(admin)
AC_CONFIG_HEADER(model1d/reflconfig.h)

dnl Compilers
AC_PROG_CC
AC_PROG_CXX

sinclude(ax_cflags_warn_all.m4)
sinclude(ax_cflags_gcc_option.m4)
AX_CFLAGS_WARN_ALL
AX_CXXFLAGS_WARN_ALL

dnl Check if we are building fat binaries for OS X
dnl AX_CFLAGS_GCC_OPTION(-arch ppc -arch i386,ARCHFLAGS)
dnl AC_SUBST(ARCHFLAGS)

dnl If magnetic is to be used (requires Fortran compiler)
AC_MSG_CHECKING([whether to turn on magnetic])
AC_ARG_ENABLE(magnetic,
    [  --disable-magnetic      skip magnetic models (if Fortran unavailable)],
    [],
    [enable_magnetic=yes])
AC_MSG_RESULT([$enable_magnetic])


dnl Do not use fortran compiler if non-magnetic
if test x"$enable_magnetic" = xyes; then 
    AC_MSG_NOTICE([Note: rerun with --disable-magnetic if Fortran is unavailable])
    AC_PROG_F77
fi
if test -n "$F77"; then
    AC_F77_LIBRARY_LDFLAGS
    AC_F77_WRAPPERS
else
    FLIBS=
    AC_SUBST(FLIBS)
fi

dnl Finish handling magnetic --- disable magnetic if fortran is unavailable
if test -z "$F77"; then enable_magnetic=no; fi
if test x"$enable_magnetic" = xyes; then 
    AC_DEFINE(HAVE_MAGNETIC,1,[Define to 1 if you want to support magnetic systems])
fi
ENABLE_MAGNETIC=$enable_magnetic
AC_SUBST(ENABLE_MAGNETIC)

dnl Profiling support
AC_MSG_CHECKING([which profiling flags to use])
AC_ARG_ENABLE(profile,
  [  --enable-profile        turn on profiling (default=no)],
  [if test x"$enable_profile" = xyes; then PROFFLAG="-pg"; 
   elif test x"$enable_profile" != xno; then PROFFLAG="$enable_profile";
   fi])
AC_SUBST(PROFFLAG)
if test -z "$PROFFLAG"; then
    AC_MSG_RESULT([none]) 
else 
    AC_MSG_RESULT([$PROFFLAG])
fi

dnl Standard helper programs
AC_PROG_RANLIB
AC_PROG_LN_S
AC_PROG_INSTALL
AC_CHECK_PROG(AR,ar,ar,:)
if test -z "$ARFLAGS"; then ARFLAGS="rc"; fi
AC_SUBST(ARFLAGS)

dnl MKOCTFILE=...
dnl AC_CHECK_PROG(MKOCTFILE,mkoctfile,mkoctfile,:)

dnl PYTHON=...
dnl AC_CHECK_PROG(PYTHON,python,python,:)

dnl SVN2CL=...
AC_CHECK_PROG(SVN2CL,svn2cl.sh,svn2cl.sh,:)

dnl Add -lm to LIBS
AC_CHECK_LIB(m,sin)
AC_CHECK_FUNCS(sincos nice setrlimit)

dnl Additional common header definitions
AH_BOTTOM([
/* _GNU_SOURCE needs to be defined to pick up sincos for glibc */
#ifndef _GNU_SOURCE
#define _GNU_SOURCE 1
#endif
])

exdir=examples
exmake=
for ex in volfrac multimag xray; do 
  exmake="$exmake $exdir/$ex/Makefile:$exdir/Makefile.template"
done
AC_CONFIG_FILES([Makeconf $exmake])

AC_OUTPUT($CONFIGURE_OUTPUTS)

# $Id$
